<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/4QCyRXhpZgAATU0AKgAAAAgAAwE7AAIAAAAIAAAAModpAAQAAAAB
        AAAAOpydAAEAAAAQAAAAmgAAAABLcmlzdGluAAAEkAMAAgAAABQAAABwkAQAAgAAABQAAACEkpEAAgAA
        AAM0OAAAkpIAAgAAAAM0OAAAAAAAADIwMTg6MTI6MjUgMTk6NTk6MTUAMjAxODoxMjoyNSAxOTo1OTox
        NQAAAEsAcgBpAHMAdABpAG4AAAD/2wBDAAcFBQYFBAcGBQYIBwcIChELCgkJChUPEAwRGBUaGRgVGBcb
        HichGx0lHRcYIi4iJSgpKywrGiAvMy8qMicqKyr/2wBDAQcICAoJChQLCxQqHBgcKioqKioqKioqKioq
        KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKir/wAARCAChAH4DASIAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD6RooooAKKKKACimSyxwoXmdY1HVmOBWJceL9OQH7Cs2obW2tJ
        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
</value>
  </data>
</root>